<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Qu·∫£n l√Ω Nh√¢n vi√™n</title>
    <!-- <link rel="stylesheet" href="style.css"> -->
</head>
<body>

<?php
// a) Khai b√°o m·∫£ng Nh√¢n Vi√™n v·ªõi 4 ph·∫ßn t·ª≠
function khaiBaoNhanVien($id, $hoten, $tuoi, $hsl) {
    return array(
        'id' => $id,
        'hoten' => $hoten,
        'tuoi' => $tuoi,
        'hsl' => $hsl
    );
}

// b) H√†m kh·ªüi t·∫°o th√¥ng tin cho m·ªôt ƒë·ªëi t∆∞·ª£ng nh√¢n vi√™n
function khoiTaoNhanVien($id, $hoten, $tuoi, $hsl) {
    return khaiBaoNhanVien($id, $hoten, $tuoi, $hsl);
}

// c) H√†m kh·ªüi t·∫°o th√¥ng tin cho nhi·ªÅu ƒë·ªëi t∆∞·ª£ng nh√¢n vi√™n
function khoiTaoNhieuNhanVien() {
    $danhSachNhanVien = array();
    
    // Th√™m d·ªØ li·ªáu m·∫´u
    $danhSachNhanVien[] = khoiTaoNhanVien('NV001', 'Nguy·ªÖn VƒÉn An', 28, 3.5);
    $danhSachNhanVien[] = khoiTaoNhanVien('NV002', 'Tr·∫ßn Th·ªã B√¨nh', 32, 4.2);
    $danhSachNhanVien[] = khoiTaoNhanVien('NV003', 'L√™ VƒÉn C∆∞·ªùng', 25, 2.8);
    $danhSachNhanVien[] = khoiTaoNhanVien('NV004', 'Ph·∫°m Th·ªã Dung', 29, 3.8);
    $danhSachNhanVien[] = khoiTaoNhanVien('NV005', 'Ho√†ng VƒÉn Em', 35, 4.5);
    $danhSachNhanVien[] = khoiTaoNhanVien('NV006', 'V≈© Th·ªã Ph∆∞∆°ng', 27, 3.2);
    $danhSachNhanVien[] = khoiTaoNhanVien('NV007', 'ƒê·∫∑ng VƒÉn Giang', 31, 4.0);
    $danhSachNhanVien[] = khoiTaoNhanVien('NV008', 'B√πi Th·ªã Hoa', 26, 3.6);
    
    return $danhSachNhanVien;
}

// d) H√†m t·∫°o b·∫£ng table ƒë·ªÉ hi·ªÉn th·ªã th√¥ng tin nh√¢n vi√™n
function taoBangNhanVien($danhSachNhanVien, $loaiMau = 'chanle') {
    $html = '<table id="employeeTable">';
    $html .= '<thead>';
    $html .= '<tr>';
    $html .= '<th>ID</th>';
    $html .= '<th>H·ªç v√† T√™n</th>';
    $html .= '<th>Tu·ªïi</th>';
    $html .= '<th>H·ªá s·ªë L∆∞∆°ng</th>';
    $html .= '<th>Thao t√°c</th>';
    $html .= '</tr>';
    $html .= '</thead>';
    $html .= '<tbody>';
    
    $stt = 0;
    foreach ($danhSachNhanVien as $index => $nhanVien) {
        $stt++;
        
        // √Åp d·ª•ng m√†u theo lo·∫°i ƒë∆∞·ª£c ch·ªçn
        if ($loaiMau == 'random') {
            $mauNen = taoMauNgauNhien();
        } else {
            $mauNen = taoMauChanLe($stt);
        }
        
        $html .= '<tr style="background-color: ' . $mauNen . ';" data-index="' . $index . '">';
        $html .= '<td>' . htmlspecialchars($nhanVien['id']) . '</td>';
        $html .= '<td>' . htmlspecialchars($nhanVien['hoten']) . '</td>';
        $html .= '<td>' . htmlspecialchars($nhanVien['tuoi']) . '</td>';
        $html .= '<td>' . htmlspecialchars($nhanVien['hsl']) . '</td>';
        $html .= '<td><button class="delete-btn" onclick="deleteRow(this)">X√≥a</button></td>';
        $html .= '</tr>';
    }
    
    $html .= '</tbody>';
    $html .= '</table>';
    
    return $html;
}

// e) H√†m kh·ªüi t·∫°o m√†u ng·∫´u nhi√™n cho t·ª´ng d√≤ng
function taoMauNgauNhien() {
    $mauSang = array(
        '#FFE6E6', '#E6F3FF', '#E6FFE6', '#FFF0E6', 
        '#F0E6FF', '#E6FFF0', '#FFE6F0', '#F0FFE6',
        '#E6E6FF', '#FFE6CC', '#CCE6FF', '#E6FFCC'
    );
    
    return $mauSang[array_rand($mauSang)];
}

// f) H√†m kh·ªüi t·∫°o m√†u ch·∫µn/l·∫ª cho b·∫£ng
function taoMauChanLe($stt) {
    if ($stt % 2 == 0) {
        // D√≤ng ch·∫µn - m√†u s√°ng
        return '#F8F9FA';
    } else {
        // D√≤ng l·∫ª - m√†u t·ªëi h∆°n
        return '#E9ECEF';
    }
}

// X·ª≠ l√Ω chuy·ªÉn ƒë·ªïi m√†u - m·∫∑c ƒë·ªãnh ·∫©n b·∫£ng
$loaiMau = isset($_GET['mau']) ? $_GET['mau'] : 'chanle';
$showTable = isset($_GET['show']) ? true : false;

// Kh·ªüi t·∫°o d·ªØ li·ªáu
$danhSachNhanVien = khoiTaoNhieuNhanVien();

// Chuy·ªÉn d·ªØ li·ªáu PHP sang JavaScript
$jsData = json_encode($danhSachNhanVien);
?>

<div class="container">
    <h1>üè¢ QU·∫¢N L√ù NH√ÇN VI√äN</h1>
    
    <div class="info">
        <h3>üìã Th√¥ng tin v·ªÅ ch∆∞∆°ng tr√¨nh:</h3>
        <p><strong>M·∫£ng Nh√¢n Vi√™n:</strong> M·ªói nh√¢n vi√™n c√≥ 4 thu·ªôc t√≠nh: ID, H·ªç t√™n, Tu·ªïi, H·ªá s·ªë l∆∞∆°ng</p>
        <p><strong>T·ªïng s·ªë nh√¢n vi√™n:</strong> <span id="totalEmployees"><?php echo count($danhSachNhanVien); ?></span> ng∆∞·ªùi</p>
        <p><strong>Ch·∫ø ƒë·ªô m√†u hi·ªán t·∫°i:</strong> <span id="currentMode">Ch∆∞a ch·ªçn</span></p>
    </div>
    
    <!-- C√°c n√∫t ƒëi·ªÅu khi·ªÉn -->
    <div class="controls">
        <h3>üé® Ch·ªçn ch·∫ø ƒë·ªô hi·ªÉn th·ªã:</h3>
        <button id="loadBtn" class="btn" onclick="loadTable()">üìä Load B·∫£ng</button>
        <button id="evenOddBtn" class="btn" onclick="applyEvenOddColor()">ÔøΩ M√†u Ch·∫µn/L·∫ª</button>
        <button id="randomBtn" class="btn" onclick="applyRandomColor()">üé≤ M√†u Ng·∫´u Nhi√™n</button>
        <button id="refreshBtn" class="btn" onclick="refreshTable()">üîÑ L√†m m·ªõi</button>
    </div>
    
    <!-- Container cho b·∫£ng -->
    <div id="tableContainer"></div>
    
    
</div>

<script>
// D·ªØ li·ªáu nh√¢n vi√™n t·ª´ PHP
let employeesData = <?php echo $jsData; ?>;
let originalData = JSON.parse(JSON.stringify(employeesData)); // Backup d·ªØ li·ªáu g·ªëc

// M√†u s√°ng cho random
const lightColors = [
    '#FFE6E6', '#E6F3FF', '#E6FFE6', '#FFF0E6', 
    '#F0E6FF', '#E6FFF0', '#FFE6F0', '#F0FFE6',
    '#E6E6FF', '#FFE6CC', '#CCE6FF', '#E6FFCC'
];

// H√†m t·∫°o m√†u ng·∫´u nhi√™n
function getRandomColor() {
    return lightColors[Math.floor(Math.random() * lightColors.length)];
}

// H√†m t·∫°o m√†u ch·∫µn l·∫ª
function getEvenOddColor(index) {
    return (index % 2 === 0) ? '#F8F9FA' : '#E9ECEF';
}

// H√†m t·∫°o b·∫£ng HTML
function createTable(colorMode = 'evenodd') {
    if (employeesData.length === 0) {
        return '<p>Kh√¥ng c√≥ d·ªØ li·ªáu nh√¢n vi√™n ƒë·ªÉ hi·ªÉn th·ªã.</p>';
    }

    let html = '<table id="employeeTable" class="show">';
    html += '<thead>';
    html += '<tr>';
    html += '<th>ID</th>';
    html += '<th>H·ªç v√† T√™n</th>';
    html += '<th>Tu·ªïi</th>';
    html += '<th>H·ªá s·ªë L∆∞∆°ng</th>';
    html += '<th>Thao t√°c</th>';
    html += '</tr>';
    html += '</thead>';
    html += '<tbody>';
    
    employeesData.forEach((employee, index) => {
        let bgColor;
        if (colorMode === 'random') {
            bgColor = getRandomColor();
        } else {
            bgColor = getEvenOddColor(index);
        }
        
        html += `<tr style="background-color: ${bgColor};" data-index="${index}">`;
        html += `<td>${employee.id}</td>`;
        html += `<td>${employee.hoten}</td>`;
        html += `<td>${employee.tuoi}</td>`;
        html += `<td>${employee.hsl}</td>`;
        html += `<td><button class="delete-btn" onclick="deleteRow(this)">X√≥a</button></td>`;
        html += '</tr>';
    });
    
    html += '</tbody>';
    html += '</table>';
    
    return html;
}

// H√†m load b·∫£ng l·∫ßn ƒë·∫ßu
function loadTable() {
    document.getElementById('tableContainer').innerHTML = createTable('evenodd');
    updateCurrentMode('M√†u Ch·∫µn/L·∫ª');
    updateActiveButton('loadBtn');
}

// H√†m √°p d·ª•ng m√†u ch·∫µn l·∫ª
function applyEvenOddColor() {
    const table = document.getElementById('employeeTable');
    if (!table) {
        alert('Vui l√≤ng Load b·∫£ng tr∆∞·ªõc!');
        return;
    }
    
    document.getElementById('tableContainer').innerHTML = createTable('evenodd');
    updateCurrentMode('M√†u Ch·∫µn/L·∫ª');
    updateActiveButton('evenOddBtn');
}

// H√†m √°p d·ª•ng m√†u ng·∫´u nhi√™n
function applyRandomColor() {
    const table = document.getElementById('employeeTable');
    if (!table) {
        alert('Vui l√≤ng Load b·∫£ng tr∆∞·ªõc!');
        return;
    }
    
    document.getElementById('tableContainer').innerHTML = createTable('random');
    updateCurrentMode('M√†u Ng·∫´u Nhi√™n');
    updateActiveButton('randomBtn');
}

// H√†m x√≥a d√≤ng
function deleteRow(button) {
    const row = button.closest('tr');
    const index = parseInt(row.getAttribute('data-index'));
    
    // X√≥a kh·ªèi m·∫£ng d·ªØ li·ªáu
    employeesData.splice(index, 1);
    
    // C·∫≠p nh·∫≠t l·∫°i b·∫£ng v·ªõi m√†u hi·ªán t·∫°i
    const currentMode = document.getElementById('currentMode').textContent;
    let colorMode = currentMode.includes('Ng·∫´u Nhi√™n') ? 'random' : 'evenodd';
    
    document.getElementById('tableContainer').innerHTML = createTable(colorMode);
    
    // C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng nh√¢n vi√™n
    document.getElementById('totalEmployees').textContent = employeesData.length;
}

// H√†m l√†m m·ªõi - kh√¥i ph·ª•c d·ªØ li·ªáu g·ªëc
function refreshTable() {
    employeesData = JSON.parse(JSON.stringify(originalData));
    document.getElementById('tableContainer').innerHTML = createTable('evenodd');
    document.getElementById('totalEmployees').textContent = employeesData.length;
    updateCurrentMode('M√†u Ch·∫µn/L·∫ª');
    updateActiveButton('refreshBtn');
}

// H√†m c·∫≠p nh·∫≠t ch·∫ø ƒë·ªô hi·ªán t·∫°i
function updateCurrentMode(mode) {
    document.getElementById('currentMode').textContent = mode;
}

// H√†m c·∫≠p nh·∫≠t n√∫t active
function updateActiveButton(activeId) {
    // X√≥a class active kh·ªèi t·∫•t c·∫£ n√∫t
    document.querySelectorAll('.btn').forEach(btn => btn.classList.remove('active'));
    // Th√™m class active cho n√∫t ƒë∆∞·ª£c ch·ªçn
    if (activeId !== 'refreshBtn') {
        document.getElementById(activeId).classList.add('active');
    }
}
</script>

</body>
</html>
